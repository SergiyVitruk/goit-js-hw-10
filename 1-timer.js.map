{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\r\nimport 'flatpickr/dist/flatpickr.min.css';\r\nimport iziToast from 'izitoast';\r\nimport 'izitoast/dist/css/iziToast.min.css';\r\nimport '../css/1-timer.css';\r\n\r\nconst btn = document.querySelector('button[data-start]');\r\nconst input = document.querySelector('#datetime-picker');\r\nconst daysEl = document.querySelector('[data-days]');\r\nconst hoursEl = document.querySelector('[data-hours]');\r\nconst minutesEl = document.querySelector('[data-minutes]');\r\nconst secondsEl = document.querySelector('[data-seconds]');\r\n\r\nbtn.disabled = true;\r\n\r\nlet userSelectedDate = null;\r\nlet timerId = null;\r\n\r\nconst options = {\r\n  enableTime: true,\r\n  time_24hr: true,\r\n  defaultDate: new Date(),\r\n  minuteIncrement: 1,\r\n  onClose(selectedDates) {\r\n    const selected = selectedDates[0];\r\n    if (selected <= new Date()) {\r\n      iziToast.error({\r\n        title: 'Error',\r\n        message: 'Please choose a date in the future',\r\n        position: 'topRight',\r\n      });\r\n      btn.disabled = true;\r\n    } else {\r\n      userSelectedDate = selected;\r\n      btn.disabled = false;\r\n    }\r\n  },\r\n};\r\n\r\nflatpickr(input, options);\r\n\r\nbtn.addEventListener('click', () => {\r\n  if (!userSelectedDate) {\r\n    return;\r\n  }\r\n\r\n  btn.disabled = true;\r\n  input.disabled = true;\r\n\r\n  timerId = setInterval(() => {\r\n    const now = new Date();\r\n    const timeLeft = userSelectedDate - now;\r\n\r\n    if (timeLeft <= 0) {\r\n      clearInterval(timerId);\r\n      updateTimer(0);\r\n      input.disabled = false;\r\n      return;\r\n    }\r\n\r\n    updateTimer(timeLeft);\r\n  }, 1000);\r\n});\r\n\r\nfunction updateTimer(ms) {\r\n  const { days, hours, minutes, seconds } = convertMs(ms);\r\n  daysEl.textContent = formatTime(days);\r\n  hoursEl.textContent = formatTime(hours);\r\n  minutesEl.textContent = formatTime(minutes);\r\n  secondsEl.textContent = formatTime(seconds);\r\n}\r\n\r\nfunction formatTime(value) {\r\n  return String(value).padStart(2, '0');\r\n}\r\n\r\nfunction convertMs(ms) {\r\n  const second = 1000;\r\n  const minute = second * 60;\r\n  const hour = minute * 60;\r\n  const day = hour * 24;\r\n\r\n  const days = Math.floor(ms / day);\r\n  const hours = Math.floor((ms % day) / hour);\r\n  const minutes = Math.floor((ms % hour) / minute);\r\n  const seconds = Math.floor((ms % minute) / second);\r\n\r\n  return { days, hours, minutes, seconds };\r\n}\r\n"],"names":["btn","input","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","timerId","options","selectedDates","selected","iziToast","flatpickr","timeLeft","updateTimer","ms","days","hours","minutes","seconds","convertMs","formatTime","value"],"mappings":"2GAMA,MAAMA,EAAM,SAAS,cAAc,oBAAoB,EACjDC,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzDL,EAAI,SAAW,GAEf,IAAIM,EAAmB,KACnBC,EAAU,KAEd,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAWD,EAAc,CAAC,EAC5BC,GAAY,IAAI,MAClBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDX,EAAI,SAAW,KAEfM,EAAmBI,EACnBV,EAAI,SAAW,GAElB,CACH,EAEAY,EAAUX,EAAOO,CAAO,EAExBR,EAAI,iBAAiB,QAAS,IAAM,CAC7BM,IAILN,EAAI,SAAW,GACfC,EAAM,SAAW,GAEjBM,EAAU,YAAY,IAAM,CAE1B,MAAMM,EAAWP,EADL,IAAI,KAGhB,GAAIO,GAAY,EAAG,CACjB,cAAcN,CAAO,EACrBO,EAAY,CAAC,EACbb,EAAM,SAAW,GACjB,MACD,CAEDa,EAAYD,CAAQ,CACrB,EAAE,GAAI,EACT,CAAC,EAED,SAASC,EAAYC,EAAI,CACvB,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAE,EACtDb,EAAO,YAAcmB,EAAWL,CAAI,EACpCb,EAAQ,YAAckB,EAAWJ,CAAK,EACtCb,EAAU,YAAciB,EAAWH,CAAO,EAC1Cb,EAAU,YAAcgB,EAAWF,CAAO,CAC5C,CAEA,SAASE,EAAWC,EAAO,CACzB,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASF,EAAUL,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAOH,EAAK,KAAQ,GAAM,EACzCI,EAAU,KAAK,MAAOJ,EAAK,IAAU,GAAM,EAEjD,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}